// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`FilterSelect Render snapshot 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <FilterSelect
    callback={[MockFunction]}
    category="testC"
    title="testT"
  />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "checkPropTypes": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "function",
    "props": Object {
      "children": <h5
        onClick={[Function]}
        style={
          Object {
            "marginBottom": "1rem",
            "marginLeft": "2em",
            "whiteSpace": "nowrap",
          }
        }
      >
        testT   
         
        <Icon
          size="sm"
          type="x-circle"
        />
      </h5>,
      "tag": "div",
    },
    "ref": null,
    "rendered": Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": Array [
          "testT   ",
          " ",
          <Icon
            size="sm"
            type="x-circle"
          />,
        ],
        "onClick": [Function],
        "style": Object {
          "marginBottom": "1rem",
          "marginLeft": "2em",
          "whiteSpace": "nowrap",
        },
      },
      "ref": null,
      "rendered": Array [
        "testT   ",
        " ",
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "function",
          "props": Object {
            "size": "sm",
            "type": "x-circle",
          },
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
      ],
      "type": "h5",
    },
    "type": [Function],
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "function",
      "props": Object {
        "children": <h5
          onClick={[Function]}
          style={
            Object {
              "marginBottom": "1rem",
              "marginLeft": "2em",
              "whiteSpace": "nowrap",
            }
          }
        >
          testT   
           
          <Icon
            size="sm"
            type="x-circle"
          />
        </h5>,
        "tag": "div",
      },
      "ref": null,
      "rendered": Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": Array [
            "testT   ",
            " ",
            <Icon
              size="sm"
              type="x-circle"
            />,
          ],
          "onClick": [Function],
          "style": Object {
            "marginBottom": "1rem",
            "marginLeft": "2em",
            "whiteSpace": "nowrap",
          },
        },
        "ref": null,
        "rendered": Array [
          "testT   ",
          " ",
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "function",
            "props": Object {
              "size": "sm",
              "type": "x-circle",
            },
            "ref": null,
            "rendered": null,
            "type": [Function],
          },
        ],
        "type": "h5",
      },
      "type": [Function],
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "legacyContextMode": "parent",
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getChildContext": Object {
            "calledByRenderer": false,
          },
          "getDerivedStateFromError": true,
          "getDerivedStateFromProps": Object {
            "hasShouldComponentUpdateBug": false,
          },
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
  },
  Symbol(enzyme.__childContext__): null,
}
`;
